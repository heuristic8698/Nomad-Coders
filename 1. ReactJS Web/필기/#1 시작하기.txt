#1-1. Introduction to React
리액트를 사용하는 이유
1. 자바스크립트 기반
 - 별도의 다른 프레임워크를 배울 필요가 없다.
 - angular, vue js 처럼 다른 언어를 배울 필요가 없다
 - 리액트에 능숙해지면 저절로 자바스크립트에 능숙해지는 것과 같다.

2. Composition 별 작업 구분
 - 요소별, 컴포넌트별 작업 가능
 - 작업이 완료된 컴포넌트를 다른 곳에 넣어 사용할 수도 있음

3. 단방향 데이터 흐름
 - 데이트는 항상 일정한 장소에 위치, 그 장소에서만 변경
 - Angular의 경우는 데이터가 View나 Model로 변경됨
 - React는 데이터는 지정된 장소에 있고 상태가 변하면 변한 데이터에 따라 UI가 변경됨
 - 반대로 UI에서 데이터는 변경할 수 없음

+ React는 프레임워크가 아닌 UI 라이브러리
 - 리액트는 MVC 구조에서 view이기 때문에 섞어서 사용할 수 있음
 
# 1-2 What are we building 
 - 영화 정보 표시 어플을 만들 것
 - 영화 포스터, 제목, 장르, 별점, 설명 정보 포함
 - 대시 보드 형태를 클론 코딩
 - 영화 정보 API는 가져와서 사용, yts.ag 
 - 토렌트 데이터베이스에서 json 파일로 가져와진 정보를 별점, 제목 연도 등으로 정렬하는 기능

# 1-3 Introduction to Create React App
 - 수업에서 사용할 코드는 리액트 코드이기 때문에 자바스크립트로 변환하는 툴이 필요
 - '트랜스파일러', '트랜스포머' 등의 명칭으로 부름
 - 웹팩이라고 하는 트랜스파일러는 , 리액트 코드를 브라우저가 이해할 수 있는 코드로 변경
 - 자바스크립트의 버전을 여러 개가 있고, 수업기준 가장 최근 것은 자바스크립트6, es6, ecmascript 6이라고도 함
 - 하지만 모든 브라우저가 이해할 수 있는 것이 아니라서 웹팩을 통해 최근 자바스크립트를 브라우저가 이해할 수 있게 변경
 - 웹팩을 사용하기에는 시간이 부족하기 때문에 인스타그램 클론 코딩 강의에서 다룸
 - 본 수업에서는 페이스 북에서 제공하는 create react app을 사용할 것

실습 환경 구축
 - node.js with npm 설치 :  https://www.npmjs.com/get-npm
 - 패키지매니저 yarn 설치 :  https://yarnpkg.com/en/docs/install#windows-stable

# 1-4 Hello World with React and CRA

1. CRA 설치
 - 윈도우에서 설치 시 시작메뉴에서 Node.js command prompt 또는 cmd 실행
 - create-react-app 설치 : npm install -g create-react-app

2. CRA 프로젝트 생성
 - 프로젝트를 설치하면 실행할 수 있는 스크립트를 얻을 수 있음
 - 프로젝트를 생성할 위치로 이동 후 리액트 앱 movie_app 생성 : create-react-app movie_app
 - 생성된 4개의 스크립트 확인 : start, build, test, eject

3. start 스크립트
 - 프로젝트 디렉토리로 이동 : cd movie_app
 - yarn start 또는 npm start
 - 일단 start에 대해서만 알아볼 것
 - yarn start를 하면 react-script 라는 것을 실행
 - 미리 설치된 개발 서버를 확인할 수 있음, 웹팩을 이용하는 것은 풀스택 강의에서 다룸
 - 개발 서버를 시작하면 커맨트 창에서 컴파일이 성공적으로 완료되었다는 메시지를 확인할 수 있음
 - 로컬 서버와 네트워크 IP 주소도 확인할 수 있음

4. 스크립트 수정 및 Configuration
 - 홈페이지에는 시작하려면 소스를 편집하라고 쓰여있음
 - 새로 커맨트 창을 실행 movie_app 폴더에서 VSC 실행 : code .
 - VSC 실행 후 무비앱 폴더 안을 보면 소스(src)가 있고 App.css, App.js, index.css 등이 미리 셋업된 것을 확인
 - CRA(create-react-app)을 사용하는 이유 중 하나는 configuration을 하지 않아도 된다는 것
 - 예를 들어 App.js에서 제목을 바꾼 후 저장만 하면 터미널에서는 컴파일이 실행되고 홈페이지는 바뀐 데이터로 새로고침